$sheet_width = 842px
$sheet_padding = 0px
$breakpoint_mobile_width = 768px
$root_font_size = 16px
$h1_size = 2em
$h2_size = 1.5em
$h3_size = 1.17em
$h4_size = 1em
$string_line_height = 1
$body_line_height = 1.25
$short_transition = 0.3s
$long_transition = 0.5s

// brand colours
$sf_black = #221E1F // not resampled yet
$sf_rich-black = #040506 // not resampled yet
$sf_ui_gray_dark = #B8C2CD // not resampled yet
$sf_ui_gray_light = #dde1e7 // not resampled yet

$sf_ui_blue = #28aae1 // strong hit
$sf_ui_purple = #892890 // weak hit
$sf_ui_red = #ce242b // miss
$sf_shallows = #3d8b8a // companion
$sf_forest = #40834f // deed
$sf_sky = #3f7faa // path
$sf_ocean = #495790 // support vehicle
$sf_oracle = #7f5a90 // module
$sf_iron = #9aa3ad // command vehicle

// basic ux colors
$color_fg = $sf_black // old: #4c4d4f
$color_bg = #fff
$color_bg_alt = $sf_ui_gray_light // old: #e4e4e4. for alternating table rows, etc
$color_bg_alt_2 = $sf_ui_gray_dark
$color_fg_alt = $sf_ui_gray_dark // 'faded' foreground colour
$color_input = $sf_ui_gray_dark // old: #ccc. inputBox background, when hovering over usable objects
$color_highlight = #fd0 // highlights active fields
$color_cta = $sf_ui_blue
$color_warning = $sf_ui_red
// 'close preview', 'delete', etc

// base text size
// $base-font-size

// typography
$type_display = "Exo", sans-serif
// $type_body = "Encode Sans Expanded", sans-serif
$type_body = "Encode Sans Semi Expanded", sans-serif
$type_header_sm = $type_body
$type_compact = "Encode Sans Condensed", sans-serif

stdFont(primary = false)
  if primary
    font-family primary, Arial, sans-serif
  else
    font-family $type_body

borderCommon(width=2px)
  border width solid $color_fg

visOff(time=$long_transition)
  transition opacity time
  visibility hidden !important
  height 0 !important
  width 0 !important
  overflow hidden !important
  opacity 0 !important
  border 0 !important
  padding 0 !important
  margin 0 !important
visOn(time=$long_transition)
  transition opacity time
  visibility visible !important
  opacity 1 !important

fadeIn(time=$long_transition)
  transition time
  visibility visible !important
  opacity 1 !important

fadeOut(time=$long_transition)
  transition time
  visibility hidden !important
  opacity 0 !important
  // z-index -1

colorThemeDark()
  background-color $color_fg
  color $color_bg

colorThemeLight()
  background-color $color_bg
  color $color_fg

labelText(fontSize=1em)
  stdFont($type_display)
  font-size fontSize
  font-weight 600
  letter-spacing 0.05ch
  text-transform uppercase
  text-align center
  line-height $string_line_height

subLabelText(fontSize=0.9em)
  labelText(fontSize)
  stdFont($type_header_sm)
  letter-spacing 0.025ch
  text-transform none

headerText()
  stdFont($type_display)
  font-weight 800
  letter-spacing 0.05ch
  text-transform uppercase
  line-height 1

headerTextSm()
  headerText()
  stdFont($type_header_sm)
  font-weight 700

bodyText()
  stdFont($type_body)
  font-weight 400
  letter-spacing 0.025ch
  line-height 1.45
  word-spacing 0.1ch
  font-size 1em
  text-transform none

bodyTextSm()
  bodyText()
  stdFont($type_compact)

inputText()
  bodyText()
  line-height 1

footerText()
  bodyTextSm()
  font-size 75%

interactiveHover(bg=$color_fg, fg=$color_bg)
  &:hover:enabled
    interactiveAltColor(bg, fg)

interactiveActive(bg=$color_fg, fg=$color_bg)
  &:active
    interactiveAltColor(bg, fg)

interactiveAltColor(fg=$color_bg, bg=$color_fg)
  background-color bg !important
  color fg !important

interactiveFocus(shadow=3px)
  outline 0px solid transparent
  box-shadow inset 0 0 0 0 transparent
  &:focus
    outline 3px solid $color_highlight
    outline-offset 0
    box-shadow inset 0 0 0 shadow
    z-index 1 // so it renders above adjacent objects when focused

interactive(bg=$color_bg, fg=$color_fg)
  transition-property color, background-color, box-shadow, outline
  transition-duration $short_transition
  background-color bg
  color fg
  cursor pointer
  interactiveFocus()
  interactiveActive(bg, fg)
  interactiveHover(bg, fg)

interactiveInactive(bg=$color_bg_alt fg=$color_fg_alt)
  background-color bg
  color fg
  cursor not-allowed
  &:active, &:hover
    background-color inherit
    color inherit


btn(fontSize = 1em, padding=0.25em 0.5em, borderWidth=2px)
  colorThemeLight()
  labelText()
  interactive()
  borderCommon(borderWidth)
  font-size fontSize
  width stretch
  width -moz-available
  height auto
  padding padding
  border-radius 0
  display flex
  align-content center
  justify-content center
  text-align center
  align-items center

inputBox()
  inputText()
  interactiveFocus()
  padding 0.125em 0.5ch
  color $color_fg
  background-color $color_bg_alt
  border-radius 0

embeddedInput()
  padding 0
  align-items stretch
  display flex
  background-color currentColor // shows only as 1px hairline gap between children
  gap 1px
  > *
    border 0
    margin 0
  > button, > label
    width max-content
    display flex
    flex 0
    border none

iconBtn(iconUrl)
  &:before
    display block
    width 100%
    height 100%
    margin 0
    padding 0
    border none
    font-size unset
    line-height unset
    background-color currentColor
    background-origin border-box
    mask-image url(iconUrl)
    mask-size 90% // contain could also work, but this pads it out a bit
    mask-repeat no-repeat
    mask-position center
    mask-origin content-box
    top 0
    left 0
    position relative
    content ""

bulletBefore(forTextSize, iconUrl)
  margin-left (forTextSize * 1.5)
  &:before
    content '';
    display inline-block;
    height (forTextSize * 0.75)
    width (forTextSize * 0.75)
    mask-image: url(iconUrl);
    mask-size: contain
    mask-repeat: no-repeat
    background-color currentColor
    margin-right (forTextSize / 4)
    margin-left -(forTextSize * 1)

// places a double width stroke behind to fake an outside stroke
textOutline(strokeColor, strokeWidth=2px)
  paint-order stroke fill
  text-stroke strokeWidth*2 strokeColor

$hexagon_pointy = polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%)
$hexagon_flat = polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)

hexagonMask()
  mask-image url("https://raw.githubusercontent.com/aureyia/roll20-character-sheets/starforged-ui-components/Ironsworn-Starforged/src/app/img/hex-checkbox-checked.svg")
  mask-position center
  mask-size contain
  mask-repeat no-repeat

// hexagonBg()

hexWidthToHeightPointy(hexWidth)
  (hexWidth*2) / math(3, sqrt)

hexagonClip(hexWidth) // sets width and height to ensure correct proportion
  width hexWidth
  height hexWidthToHeightPointy(hexWidth)
  clip-path $hexagon_pointy
  // TODO: as svg clip path? url + #id

hexCheckbox(hexWidth, emptyImage="https://raw.githubusercontent.com/aureyia/roll20-character-sheets/starforged-ui-components/Ironsworn-Starforged/src/app/img/hex-checkbox-unchecked.svg")
  appearance none
  hexagonClip(hexWidth)
  cursor pointer
  border none
  width hexWidth
  height hexWidthToHeightPointy(hexWidth)
  color currentColor
  background-color transparent
  background-image url(emptyImage)
  background-size 100%
  background-position center
  transition $short_transition
  &:hover
    background-color $color_fg_alt
  &:checked
    background-color currentColor

