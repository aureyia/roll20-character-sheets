mixin progressRoll(opts, visibility)
  - var formattedName = _.kebabCase(opts.Name)
  button(
    type="roll"
    title=opts.Name
    name=`roll_${formattedName}`
    class=visibility
    value=`&{template:starforged_progress} {{header=@{character_name}}} {{progress_name=${opts.Name}}} {{progress=[[?{Filled Progress|0}]]}} {{challenge1=[[d10]]}} {{challenge2=[[d10]]}}`
  )

mixin oracleRoll(opts, visibility)
  button(
    type="roll"
    title=opts.title
    name=`roll_${opts.name}`
    class=visibility
    value=`&{template:starforged_oracles} {{header=${translation[opts.title]}}} {{${opts.name}=[[d100]]}}`
  )


//- TODO: Finish Building Factory
mixin movesRoll(opts, visibility)
  //- -
  //-   console.log(`=================${opts.Name}===================`)
  //-   let stats = []
  //-   opts.Trigger.Options.forEach((option) => {
  //-     console.log(option.Using)
  //-     option.Using.forEach((stat) => {
  //-       if(stat.includes('/')) {
  //-         console.log('stat', stat)
  //-         const statKey = stat.match(/[^/]+$/)[0].replace('_', ' ')
  //-         const statObj = {
  //-           text: option[statKey].Name,
  //-           stat: `?{${option[statKey].Name}}`       
  //-         }

  //-         stats.push(option[statKey].Name)
  //-       } else {
  //-         stats.push(stat)
  //-       }
  //-     })
  //-   })
  //-   console.log(stats)
  //-   //- console.log('opts', opts)
  //-   //- const usesCustomStat = opts.Trigger.Options.find()
  //-   var formattedName = _.kebabCase(opts.Name)
  //-   var roll20MoveData = rolls[opts.Name]
  //-   const rollQuery = {
  //-     stat: `?{}`,
  //-     repeat_stat: `?{}`
  //-   }

  //- Single Core Stat
  //- Multiple Core Stats
  //- Single Custom Stat
  //- Multiple Custom Stats
  //- Multiple Custom and Core Stats
  button(type="action" name="act_starforged_moves") Nom
  //- button(
  //-   type="action"
  //-   title=`${opts.Name} Move`
  //-   class=visibility
  //-   name=`roll-${formattedName}`
  //-   value!=`&{template:starforged_moves} {{header=@{character_name}}} {{name=${opts.Name}}} {{action=[[{d6+${roll20MoveData.stat}+(?{Modifier|0}),{10}}kl1]]}} {{negate1=[[1+${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{negate2=[[2+${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{negate3=[[3+${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{negate4=[[4+${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{negate5=[[5+${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{negate6=[[6+${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{challenge1=[[d10]]}} {{challenge2=[[d10]]}} {{momentum=[[@{momentum}]]}} {{modifiers=[[${roll20MoveData.repeat_stat}+(?{Modifier|0})]]}} {{add=[[(?{Modifier|0})]]}} {{stat=[[${roll20MoveData.repeat_stat}]]}}`
  //- )

mixin customRoll(opts, visibility)
  button(
    type="roll"
    title=`${translation[opts.title]} Move`
    class=visibility
    name=`roll_${opts.name}`
    value!=opts.roll
  )
