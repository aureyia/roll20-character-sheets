mixin progressRoll(opts, visibility)
  - var formattedName = _.kebabCase(opts.Name)
  button(
    type="roll"
    title=opts.Name
    name=`roll_${formattedName}`
    class=visibility
    value=`&{template:starforged_progress} {{header=@{character_name}}} {{progress_name=${opts.Name}}} {{progress=[[?{Filled Progress|0}]]}} {{challenge1=[[d10]]}} {{challenge2=[[d10]]}}`
  )

mixin oracleRoll(opts, visibility)
  button(
    type="roll"
    title=opts.title
    name=`roll_${opts.name}`
    class=visibility
    value=`&{template:starforged_oracles} {{header=${translation[opts.title]}}} {{${opts.name}=[[d100]]}}`
  )

mixin movesRoll(move, classes)
  -
    function covertToHtmlEnties(text) {
      return text.replaceAll(',', '&#44;')
    }

    const formattedOptions = move.Trigger.Options.map((option) => {
      const optionText = option.Text ? covertToHtmlEnties(option.Text) : null
      return {
        text: optionText,
        method: option.Method.toLowerCase(),
        stats: option.Using
      }
    })

    const value = JSON.stringify({ name: move.Name, options: formattedOptions })
    console.log('value', value)
  button(
    type="action"
    name=`act_starforged_moves`
    class=classes
    value=value
  )

mixin customRoll(opts, visibility)
  button(
    type="roll"
    title=`${translation[opts.title]} Move`
    class=visibility
    name=`roll_${opts.name}`
    value!=opts.roll
  )
