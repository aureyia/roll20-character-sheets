include ./container
include ../../oracles/mixins/oracle-table
include ../../oracles/mixins/oracle-roll-btn

mixin movePreviewFactory(move, options)
  +container(move, options)
    .rules-text !{move.Text}
    if move.Oracle
      .move-oracle-container
        -
          let btnText = `Roll the ${move.Name} oracle`
          var moveOracle = oracles.find(group => { return group.Name === 'Moves' }).Oracles.find(oracle => { return oracle.Name === move.Name })
        if moveOracle.Table
          +oracleSingleButton(moveOracle, btnText)
          +oracleTable(moveOracle)
        else if moveOracle.Oracles
          +oracleMultiBtn(moveOracle)
          +oracleMultiSubTable(moveOracle, btnText)

mixin movePreview(move, options)
  if options.no_title
    div
  else
    div.move-title.move-preview=move.Name
      if move['Progress Move']
        span.move-progress-label='Progress Move'
  if move.Trigger.Options
    -
      let rollType = ''
      const moveTriggerOptions = move.Trigger.Options.filter(option => { return option['Roll type'] === 'Action roll' || option['Roll type'] === 'Progress roll'})
      const areOnlyActionRollOptions = moveTriggerOptions.every((option) => option['Roll type'] === 'Action roll')
      const areOnlyProgressRollOptions = moveTriggerOptions.every((option) => option['Roll type'] === 'Progress roll')
      if(areOnlyActionRollOptions === true) {
        rollType = 'Action roll'
      } else if (areOnlyProgressRollOptions === true) {
        rollType = 'Progress roll'
      } else {
        rollType = 'Mixed roll'
        console.log('I am nom')
      }
      //- - const mixedRollType = moveTriggerOptions.every((option) => option['Roll type'] === 'Action roll')
    if rollType === 'Progress roll'
      +rollLabel
        +progressRoll(move, 'hide-element')
    else if rollType === 'Action roll'
      +rollLabel
        +movesRoll(move, 'hide-element')

  .move-description
    block
  .oracle-footer.move-page-footer=move.Page

mixin container(move, options = false)
  if options.visibility
    div.move-visible.surface
      +movePreview(move, options)
        block
  else
    input(type='radio' name='attr_move_preview' class=`${move.id} hide-element` value=move.Name)
    div(class=`${move.id} surface showhide`)
      +movePreview(move, options)
        block