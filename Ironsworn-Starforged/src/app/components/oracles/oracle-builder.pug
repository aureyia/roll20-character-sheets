include ../moves/mixins/move-builder

mixin oracleLabel(type, name, id)
  label.toggle-btn.oracle-btn
    input.hide-element.btn-input(
      type='radio'
      title=`@{oracle_${type}_button}`
      name=`attr_oracle_${type}_button`
      value=id
    )
    .btn-content.oracle-name=header

mixin oracleRowBuilder(table, row, index)
  - const initChance = (index === 0) ? row.Chance - (row.Chance - 1) : table[index - 1].Chance + 1
  - const finalChance = row.Chance
  - const range = (initChance === finalChance) ? finalChance : `${initChance}-${finalChance}`
  - const result = row.Description
  // TODO: consider whether to display row.Details here
  .oracle-row
    span.oracle-roll=range
    span.oracle-result=result

mixin oracleRollGroup(group)
  .oracle-box
    .oracle-title=group.Name
    each oracle in group.Oracles
      - const header = `${group.Name} - ${oracle.Name}`
      - const groupFormattedName = group.Name.toLowerCase().replace(/\s/g, '-')
      - const oracleFormattedName = oracle.Name.toLowerCase().replace(/\s/g, '-')
      - const id = (oracleFormattedName === 'encountered-behavior') ? `${groupFormattedName}-encountered-beehavior` : `${groupFormattedName}-${oracleFormattedName}`

      .oracle
        .button-container
          if oracle.Tables
            - const options = oracle.Tables.map((obj, index) => { return `${obj['Display name']},${index}` })
            - const rollQuery = `{{tableChoice=[[(?{Choose Table|${options.join('|')}})]]}}`
            button(
              type='roll'
              class='oracle-roll'
              title=`@{roll_${id}_oracle}`
              name=`roll_${id}_oracle`
              value=`&{template:starforged_oracles} ${rollQuery} {{header=${oracle.Name}}} {{${id}=[[d100]]}}`
            )
          else
            button(
              type='roll'
              class='oracle-roll'
              title=`@{roll_${id}_oracle}`
              name=`roll_${id}_oracle`
              value=`&{template:starforged_oracles} {{header=${header}}} {{${id}=[[d100]]}}`
              )
        label.toggle-btn.oracle-btn
          input.hide-element.btn-input(
            type='radio'
            title=`@{selected_oracle}`
            name=`attr_selected_oracle`
            value=id
          )
          .btn-content.oracle-name=oracle.Name

mixin oracleBuilder(oracle, groupName)
  - const groupFormattedName = groupName.toLowerCase().replace(/\s/g, '-')
  - const oracleFormattedName = oracle.Name.toLowerCase().replace(/\s/g, '-')
  - const id = (oracleFormattedName === 'encountered-behavior') ? `${groupFormattedName}-encountered-beehavior` : `${groupFormattedName}-${oracleFormattedName}`
  //- Stupid way for me to generate orcale ccs
  //- - console.log(`input[type=radio].${id}:checked ~ div.${id},`)

  input(class=`${id} hide-element` type='radio' name=`attr_oracle_preview` value=id)
  div(class=`${id} showhide`)
    .oracle-title.oracle-table-preview=`${groupName} - ${oracle.Name}`
    .oracle-table
      if oracle.Table
        each row, index in oracle.Table
          +oracleRowBuilder(oracle.Table, row, index)
      else if oracle.Tables
        each table, index in oracle.Tables
          .oracle-subtitle=table['Display name']
          each row, index in table.Table
            +oracleRowBuilder(table.Table, row, index)