//- include ../../components/stats/stats
include ./mixins/conditionMeter
include ./mixins/vitals
include ./mixins/xp
include ../rolls/rolls
include ../attrInput/attrInput

-
  charResources = [
    {attr: 'health', i18n: "resource-health", label: "roll-plus-health"},
    {attr: 'spirit', i18n: "resource-spirit", label: "roll-plus-spirit"},
    {attr: 'supply', i18n: "resource-supply", label: "roll-plus-supply"},
    {attr: 'asset-starship-meter-integrity', i18n: "resource-vehicle-integrity", label: "roll-plus-integrity"}
    ];
  sharedResources = ['supply'];
  maxStandardResource = 5;
  minStandardResource = 0;
  standardValues = _.range(maxStandardResource, minStandardResource);
  inverse = _.range(minStandardResource, maxStandardResource);

mixin resourceRollable(attribute, i18n, sheetType, min=minStandardResource, max=maxStandardResource, value=maxStandardResource)
  section(id=`${sheetType}-${attribute}`).resource.resource-numeric.resource-rollable
    +statRollBtn(attribute, i18n, false, false, ["title"])
    +attrSpinner(attribute, value, min, max)

mixin characterResourceCounter(resourceId, i18n_key=resourceId, attribute=_.snakeCase(resourceId))
  label(class=[resourceId])
    +i18n(i18n_key).resource-title
    +attrSpinner(attribute, 0, 0, undefined)

mixin characterResources(resources)
  section.vitals
    each textResource in textResources
      +characterResourceText(textResource)
  section.condition-meters
    each resource in resources
      +attrRollable(resource.attr, false, resource.i18n, resource.label, true, maxStandardResource, minStandardResource, maxStandardResource)

    //- +momentumSpinner
    //- +characterXp

mixin sharedResources(resources)
  .resources
    each resource in resources
      +resourceRollable(resource.attr, resource.i18n, "shared")


mixin resources(sheetType)
  - resources;
  if sheetType == 'shared'
    - resources = sharedResources;
    +sharedResources(resources)
  else
    - resources = charResources;
    +characterResources(resources)